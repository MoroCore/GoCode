package main

import (
	"fmt"
)
//赋值运算符
func main(){

	//1 基本的介绍
	//	赋值运算符就是将某个运算后的值，赋给指定的变量。

	//2 赋值运算符的分类
	//  =  +=  -= *= /= %=
	//  <<=  >>= &= ^= |=  二进制赋值

	//3 赋值运算的案例演示
	// 赋值运算符的使用演示
	// var i int
	//i = 10 //基本赋值

	//有两个变量，a和b,要求将其进行交换，最终打印结果
	// a=9, b=2 ==> a=2b= 9
	a := 9
	b := 2
	fmt.Printf("交换前的情况是a = %v , b=%v \n", a, b)

	//定义一个临时变量
	t := a
	a = b//
	b = t//
	fmt.Printf("交换后的情况是a = %v , b=%v \n", a, b)

	//复合赋值的操作
	a += 17 // a = a + 17
	fmt.Println("a=",a)

	// 4赋值运算符的特点
	//	1)运算顺序从右往左
	var c int
	c = a + 3//赋值运算的执行顺序是从右向左
	fmt.Println("c=",c)
	//	2)赋值运算符的左边只能是变量,右边可以是变量、表达式、常量值
	//		表达式:任何有值都可以看做表达式
	var d int
	d = a //
	d = 8 + 2 * 8 //=的右边是表达式
	d = test() + 90 // =的右边是表达式
	d = 890 // 890常 量
	fmt.Println("d=",d)

	//	3)复合赋值运算符等价于下面的效果
	//	比如：a+=3等价于a=a+3

	// 5面试题
	//有两个变量，a和b，要求将其进行交换，但是不允许使用中间变量，最终打印结果
	num1 := 100
	num2  := 200

	num1 = num1 + num2
	num2 = num1 - num2
	num1 = num1 - num2
	fmt.Println("num1=",num1)
	fmt.Println("num2=",num2)


	//7 其它运算符说明  
	// & 返回变量储存的地址
	// * 指针变量

	//8 特别说明
	//  go语言不支持三元运算符

	
}

func test() int {
	return 10
}