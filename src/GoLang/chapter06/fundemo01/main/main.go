package main

import (
	"fmt"
	util "GoLang/chapter06/fundemo01/utils"
)
//包的引出
//	包的三大作用
//		区分相同名字的函数、变量等标识符
//		当程序文件很多时,可以很好的管理项目
//		控制函数、变量等访问范围，即作用域

// 细节
// 	在给一个文件打包时，该包对应一个文件夹，比如这里的 utils 文件夹对应的包名就是 utils, 文件的包名通常和文件所在的文件夹名一致，一般为小写字母。
//	 当一个文件要使用其它包函数或变量时，需要先引入对应的包
//	 package 指令在 文件第一行，然后是 import 指令。
//	 在 import 包时，路径从 $GOPATH 的 src 下开始，不用带 src , 编译器会自动从 src 下开始引入
//  为了让其它包的文件，可以访问到本包的函数，则该函数名的首字母需要大写，类似其它语言的 public ,这样才能跨包访问
//  在访问其它包函数，变量时，其语法是 包名.函数名
//	在同一包下，不能有相同的函数名（也不能有相同的全局变量名），否则报重复定义
//	 如果你要编译成一个可执行程序文件，就需要将这个包声明为 main , 即 package main .这个就是一个语法规范，如果你是写一个库 ，包名可以自定义

func main(){

	result :=util.Cal(10,20,'+')
	fmt.Println("result=",result)
}